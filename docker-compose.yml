version: '3.7'

services:

  db:
    container_name: maxi-mysql
    image: mysql:latest
    restart: unless-stopped
    volumes:
      - ./mysql/mysql-data/db:/var/lib/mysql
      - ./mysql/setup.sql:/docker-entrypoint-initdb.d/setup.sql
#    ports:
#      - 3306:3306
    expose:
      - 3306
    environment:
      - TZ=America/New_York
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PWD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PWD}
#    networks:
#      docker-network:
#        ipv4_address: 61.61.61.100
#    networks:
#      reverse-proxy-network:
#        ipv4_address: 21.21.21.10
    networks:
      mysql-network:
        ipv4_address: 61.61.61.100

  api:
    depends_on:
      - db
    container_name: maxi-api
    build: ./api
    restart: unless-stopped
    ports: 
      - 3800:3800
#    expose:
#      - 3800
    environment:
      - TZ=America/New_York
      - NAME_DB=${DB_NAME}
      - USER_DB=${DB_USER}
      - PASSWORD_DB=${DB_PWD}
      - HOST_DB=db
      - PORT_DB=3306
      - DB_CONNECTION_LIMIT=10
      - JWT_PWD=${JWT_PWD}  
#      - VIRTUAL_HOST=aaa.com,www.aaa.com
#      - LETSENCRYPT_HOST=aaa.com,www.aaa.com
#      - LETSENCRYPT_EMAIL=aaa@aaa.com

#    networks:
#      docker-network:
#        ipv4_address: 61.61.61.101
    networks:
      reverse-proxy-network:
        ipv4_address: 21.21.21.11
      mysql-network:
        ipv4_address: 61.61.61.101        

  app:
    depends_on:
      - api
    container_name: maxi-web
    image: nginx
    restart: unless-stopped
#     ports:
#       - 8082:80
    expose:
      - 80
    volumes:
      - ./app/PROD/html:/usr/share/nginx/html
      - ./app/PROD/conf/nginx.conf:/etc/nginx/nginx.conf
#    environment:
#      - VIRTUAL_HOST=aaa.com,www.aaa.com
#      - LETSENCRYPT_HOST=aaa.com,www.aaa.com
#      - LETSENCRYPT_EMAIL=aaa@aaa.com
#     networks:
#       docker-network:
#         ipv4_address: 61.61.61.102
    networks:
      reverse-proxy-network:
        ipv4_address: 21.21.21.12


#networks:
#  docker-network:
#    name: docker-network
#    ipam:
#      config:
#        - subnet: 61.61.61.0/24

networks:
  reverse-proxy-network:
    external:
      name: reverse-proxy-network

  mysql-network:
    name: mysql-network
    ipam:
      config:
        - subnet: 61.61.61.0/24
